package array;

/* 大意：
 * 给出一个非负数的代表数字的数组，给这个“数字”加一。
 * 这个数字的存储形式为最高位的数在数组的最前端。
 * 
 * 说白了就是就是数组的每一个位置代表一个数的每一位，有个位十位百位等，
 * 如[8]表示数字8，[1，2]表示数字12等等，题目要求将给出的数字代表的数字加一并用同样的形式返回结果。
 * */

public class Solution66 {
	
	/* 这个题目的难点在于对加法进位的判断，
	 * 从个位数开始，如果+1后等于10，那么就要进位，
	 * 而进位时也要不断对高位进行判断是否还要进位，而如果最高位同样产生了进位，数组长度还要增加1，直接返回一个新的数组即可。
	 * 所以只要把这个逻辑理清楚，代码还是好写出来的。
	 * */
	
    public int[] plusOne(int[] digits) {
        int len = digits.length;
        for (int i = len - 1; i >= 0; i--) {
            if (digits[i] < 9) {
                digits[i]++;
                return digits;
            }
            digits[i] = 0;
        }
        int[] res = new int[len + 1];
        res[0] = 1;
        return res;
    }
}
