package math;

/* 反转数字。
 * 输入123，返回321。
 * 输入-123，返回-321。
 * */

public class Solution7 {
	
	/* 正负号不影响计算，主要考虑溢出问题。
	 * 因为输入的x也是一个整型数，所以x的范围也应该在 -2147483648～2147483647 之间，
	 * 那么x的第一位只能是1或者2，翻转之后res的最后一位只能是2或1，
	 * 所以res只能是 2147483641 或 2147483642 都在int的范围内。
	 * 但是它们对应的x为 1463847412 和 2463847412，后者超出了数值范围。
	 * 所以当过程中res等于 214748364 时， 输入的x只能为 1463847412， 翻转后的结果为 2147483641，都在正确的范围内，
	 * 所以对于输入不用检查是否越界。
	 * */
	
    public int reverse(int x) {
        if (x == 0) {
            return 0;
        }
        int res = 0;
        while (x != 0) {
            //这里必须加上判断，因为会出现溢出问题，也就是x>1463847412，翻转后已经超过了2147483642。
            if (Math.abs(res) > Integer.MAX_VALUE / 10) {
                return 0;
            }
            
            /*int t = res * 10 + x % 10;
            if (t / 10 != res) return 0;
            res = t;*/
            
            res = res * 10 + x % 10;
            x /= 10;
        }
        return res;
    }
}
