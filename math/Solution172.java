package math;

/* 大意：
 * 给出一个整数n，返回n!后面0的个数。
 * 注意：你的算法时间复杂度要是logn以内。
 * */

public class Solution172 {
	
	/* 因为我们知道0是2和5相乘得到的，而在1到n这个范围内，2的个数要远多于5的个数，所以这里只需计算从1到n这个范围内有多少个5就可以了。
	 * n=15。那么在15!中有3个5(来自其中的5, 10, 15)， 所以计算n/5就可以。
	 * n=25。与n=15相同，计算n/5，可以得到5个5，分别来自其中的5, 10, 15, 20, 25，但是在25中其实是包含2个5的，这一点需要注意。
	 * 所以除了计算n/5， 还要计算n/5/5, n/5/5/5, n/5/5/5/5, ..., n/5/5/5,,,/5直到商为0，然后就和，就是最后的结果。
	 * */
	
    public int trailingZeros(int n) {
        return n / 5 == 0 ? 0 : n /5 + trailingZeros(n / 5);
    }
}
